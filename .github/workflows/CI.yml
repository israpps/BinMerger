name: CI

on:
  push:
    branches:
      - 'main'
      - 'master'
      - 'v*'
    tags:
      - v*
  pull_request:
  workflow_dispatch:
  repository_dispatch:
    types: [run_build]


jobs:
  build:
    strategy:
     matrix:
       toolchain: ["windows-static-x86","linux-x86"]
    runs-on: ubuntu-latest
    container: dockcross/${{ matrix.toolchain }}:latest
    steps:

    - uses: actions/checkout@v2
    - run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        sudo apt-get install --assume-yes p7zip-full 
        git fetch --prune --unshallow

    - name: Compile project
      run: |
        DATEE=`date '+[%Y-%m-%d]'`
        mv LICENSE LICENSE.TXT
        echo "BinMerger, coded by Matias israelson." >README.TXT
        echo "package compiled and released on $DATEE" >>README.TXT
        echo "Commit  ${{ github.sha }}" >>README.TXT
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make clean all
        7z a -t7z ${{ github.event.repository.name }}-${{ matrix.toolchain }}.7z ../LICENSE.TXT ../README.TXT "${{ github.event.repository.name }}*"
    
    - name: "compress (windows-only files)"
      if:   contains(matrix.toolchain, 'windows')
      run: |
        cd build
        7z a -t7z ${{ github.event.repository.name }}-${{ matrix.toolchain }}.7z ../drag-and-drop.bat
        
    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.toolchain }}
        path: |
             build/${{ github.event.repository.name }}-${{ matrix.toolchain }}.7z
    - name: Deploy pre-release
      uses: softprops/action-gh-release@v1
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        fail_on_unmatched_files: true
        files: |
            build/${{ github.event.repository.name }}-${{ matrix.toolchain }}.7z
        name: "Latest build"
        tag_name: "Latest"
        prerelease: true
        generate_release_notes: true
        
